openapi: '3.0.2'
info:
  title: User management
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:
  /users:
    get:
      tags:
        - User
      summary: Returns all users
      responses:
        200:
          description: Returns a list of all users
    post:
      tags:
        - User
      summary: Registers a new user
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        201:
          description: Creates a new user
  /users/{userid}:
    parameters:
      - $ref: '#/components/parameters/userID'
    get:
      summary: Returns a user based on the userid
      tags:
        - User
      responses:
        200:
          $ref: '#components/responses/User'
    put:
      summary: Updates a user based on the userid
      tags:
        - User
      requestBody:
        $ref: '#components/responses/User' 
      responses:
        200:
          $ref: '#components/responses/User'
    delete:
      summary: Deletes a user based on the userid
      tags:
        - User
      responses:
        204:
          description: OK

  /users/login:
    post:
      tags:
        - User
      summary: Logs in a user
      requestBody:
        $ref: '#/components/requestBodies/UserLogin'
      responses:
        200:
          description: User logged in
  /users/{userid}/logout:
    parameters:
      - $ref: '#/components/parameters/userID'
    get:
      tags:
        - User
      summary: Logs out the given user
      responses:
        200:
          description: User logged out



  
components:
  parameters:
    userID:
      name: userid
      in: path
      required: true
      schema:
        type: integer
      description: Corresponding userID

  requestBodies:
    User:
      content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
    UserLogin:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserLogin'
  responses:
    User:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'

  schemas:
    User:
      type: object
      properties:
        firstname:
          type: string
          example: Max
        lastname:
          type: string
          example: Mustermann
        email:
          type: string
          example: max.mustermann@email.de
        password:
          type: string
          example: password
    UserLogin:  
      type: object
      properties:
        email: 
          type: string
          example: someemail@email.de
        password:
          type: string
          example: SuperSecurePWD

        
        


